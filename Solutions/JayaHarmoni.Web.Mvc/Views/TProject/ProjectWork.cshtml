@model JayaHarmoni.Web.Mvc.Controllers.ViewModels.TWorkViewModel
@if (false)
{ <script src="@Url.Content("~/Scripts/jquery-1.9.1-vsdoc.js")" type="text/javascript"></script> }

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.ProjectId)
@(Html.Kendo()
.Grid<JayaHarmoni.Web.Mvc.Controllers.ViewModels.TWorkViewModel>()
    .Name("TWorkGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.JobId).Width("auto").ClientTemplate("#:JobName#");
        columns.Bound(p => p.WorkQty).Width("auto").Format("{0:N2}");
        columns.Bound(p => p.WorkPrice).Width("auto").Format("{0:N2}");
        columns.Bound(p => p.WorkTotal).Width("auto").Format("{0:N2}");
        columns.Bound(p => p.WorkRealQty).Width("auto").Format("{0:N2}");
        columns.Bound(p => p.WorkRealPaid).Width("auto").Format("{0:N2}");
        columns.Command(command => { command.Edit().Text(" "); command.Destroy().Text(" "); }).Width("auto");
    })
    .ToolBar(toolbar => { toolbar.Create().Text("Tambah Pekerjaan Baru"); })
    .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(win => win.Width(450)))
    .Pageable()
    .Sortable()
    .Scrollable()
    .ColumnMenu()
    .Selectable()
    .Filterable()
    .Groupable()
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .HtmlAttributes(new { style = "height:500px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Batch(false)
        .ServerOperation(false)
        .Events(events => events.RequestEnd("TWorkGrid_onRequestEnd"))
        .Model(model => model.Id(p => p.WorkId))
        .Create(create => create.Action("TWorks_Create", "TProject").Data("ParentProjectInfo"))
        .Read(read => read.Action("TWorks_Read", "TProject").Data("ParentProjectInfo"))
        .Update(update => update.Action("TWorks_Update", "TProject").Data("ParentProjectInfo"))
        .Destroy(destroy => destroy.Action("TWorks_Destroy", "TProject").Data("ParentProjectInfo"))
    )
    .Events(e => e.DataBound("TWorkGrid_onDataBound"))
    )


<script type="text/javascript">
    function TWorkGrid_onRequestEnd(e) {
        //RequestEnd handler code
        //bug : error when update after insert new data, no id catched
        //bug fix : refresh after insert new data, 
        if (e.type === "create") {
            //alert("onRequestEnd");
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                //refresh grid if no errors
                $('#TWorkGrid').data().kendoGrid.dataSource.read();
            }
        }
    }

    function TWorkGrid_onDataBound(e) {
        //edit data when double click
        $('#TWorkGrid tbody tr').dblclick(function () {
            var grid = $('#TWorkGrid').data().kendoGrid;
            grid.editRow(this);
        })
    }

    function ParentProjectInfo() {
        //alert($("#ProjectId").val());
        return {
            ParentProjectId: $("#ProjectId").val()
        }
    }
</script>
