@model JayaHarmoni.Web.Mvc.Controllers.ViewModels.TAbsentDetViewModel
@if (false)
{ <script src="@Url.Content("~/Scripts/jquery-1.9.1-vsdoc.js")" type="text/javascript"></script> }

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.AbsentId)
@Html.Hidden("ProjectId")
@(Html.Kendo()
.Grid<JayaHarmoni.Web.Mvc.Controllers.ViewModels.TAbsentDetViewModel>()
    .Name("AbsentDetGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.AbsentDetDate).Width("auto").Format("{0:dd-MMM}");
        columns.Bound(p => p.AbsentDetOperator).Width("auto").ClientTemplate("#:AbsentDetOperatorName#");
        columns.Bound(p => p.AbsentDetSinso).Width("80px").ClientTemplate("#:AbsentDetSinsoName#");
        columns.Bound(p => p.AbsentDetStart).Width("80px").Format("{0:N2}");
        columns.Bound(p => p.AbsentDetEnd).Width("80px").Format("{0:N2}");
        columns.Bound(p => p.AbsentDetQty).Width("80px").Format("{0:N2}").Title("Jam Kerja Jumlah");
        columns.Bound(p => p.AbsentDetBlock).Width("150px");
        columns.Bound(p => p.WorkId).Width("auto").ClientTemplate("#:WorkName#");
        columns.Bound(p => p.AbsentDetResult).Width("80px").Format("{0:N2}");
        columns.Bound(p => p.AbsentDetBbm).Width("80px").Format("{0:N2}");
        columns.Bound(p => p.AbsentDetDesc).Width("auto");
        columns.Command(command => { command.Edit().Text(" "); }).Width("auto");
    })
    //.ToolBar(toolbar => { toolbar.Create().Text("Tambah Detail Timesheet Baru"); })
    .Editable(editable => editable.Mode(GridEditMode.InLine))//.Window(win => win.Width(450)))
    //.Pageable()
    //.Sortable()
    //.Scrollable()
    //.ColumnMenu()
    //.Selectable()
    //.Filterable()
    //.Groupable()
    .Resizable(resize => resize.Columns(true))
    //.Reorderable(reorder => reorder.Columns(true))
    //.HtmlAttributes(new { style = "height:540px;" })
    .DataSource(dataSource => dataSource
        .Ajax()        
        .PageSize(50)
        .Batch(false)
        .ServerOperation(false)
        .Events(events => events.RequestEnd("AbsentDetGrid_onRequestEnd"))
        .Model(model => model.Id(p => p.AbsentDetId))
        .Create(create => create.Action("TAbsentDets_Create", "TProject").Data("ParentAbsentDetInfo"))
        .Read(read => read.Action("TAbsentDets_Read", "TProject").Data("ParentAbsentDetInfo"))
        .Update(update => update.Action("TAbsentDets_Update", "TProject").Data("ParentAbsentDetInfo"))
        .Destroy(destroy => destroy.Action("TAbsentDets_Destroy", "TProject").Data("ParentAbsentDetInfo"))
    )
    .Events(e => e.DataBound("AbsentDetGrid_onDataBound"))
    )


<script type="text/javascript">
    function AbsentDetGrid_onRequestEnd(e) {
        //RequestEnd handler code
        //bug : error when update after insert new data, no id catched
        //bug fix : refresh after insert new data, 
        if (e.type === "create" || e.type === "update") {
            //alert("onRequestEnd");
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                //refresh grid if no errors
                $('#AbsentDetGrid').data().kendoGrid.dataSource.read();
            }
        }
    }

    function AbsentDetGrid_onDataBound(e) {
        //edit data when double click
        $('#AbsentDetGrid tbody tr').dblclick(function () {
            var grid = $('#AbsentDetGrid').data().kendoGrid;
            grid.editRow(this);
        })
    }

    function ParentAbsentDetInfo() {
        //alert($("#ProjectId").val());
        return {
            ParentAbsentId: $("#AbsentId").val()
        }
    }

    function ParentProjectInfo() {
        //alert($("#ProjectId").val());
        return {
            ParentProjectId: $("#ProjectId").val()
        }
    }
</script>
